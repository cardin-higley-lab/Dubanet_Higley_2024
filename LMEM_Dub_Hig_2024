% Linear Mixed Effect Model
% Olivier Dubanet 03/2024
% LMEM compare all groups to the 1st one, this
% script loop trought all groups to perform multicomparison

%% ------------Each variables as to be row
% Adapt in function of number of groups you need to compare
% Names of all groups/factors
names = {'gp1'; 'gp2'; 'gp3'};
% Sequences of comparison in cells
seq = {[1 2 3],[2 1 3]};
% Nested group for random factor = animals
Nested_{1} = Nestgroup_1; Nested_{2} = Nestgroup_2; Nested_{3} = Nestgroup_3; 
% Data for each groups/factor
Dat_{1} = datagp1; Dat_{2} = datagp2; Dat_{3} = Alldatagp2;  

%% ------------Compute loop for each sequences
SumStat = {};
for i = 1:length(seq)
    compare = seq{i};
    Datnested = vertcat(cell2mat(Dat_(compare(1))),cell2mat(Dat_(compare(2))),cell2mat(Dat_(compare(3))));
    mouse = categorical(vertcat(Nested_{compare(1)},Nested_{compare(2)},Nested_{compare(3)}));
    factor = categorical(vertcat(repmat(1,length(Dat_{compare(1)}),1),repmat(2,length(Dat_{compare(2)}),1),...
        repmat(3,length(Dat_{compare(3)}),1)));
    % table as fitlme table
    tbl = table(factor,mouse,Datnested,'VariableNames',{'factor','mouse','dat'});
    % fitlme formula
    mdl = fitlme(tbl,'dat~factor+(1|mouse)');
    % temporary results table
    tmp_tbl = dataset2table(mdl.Coefficients);
    
    % Bonferroni correction if needed
    tmp_tbl.pValue = tmp_tbl.pValue/(length(compare)-1);
    
    % replace with names
    tmp_tbl.Name(2:end) = names(compare(2:end));
    %summary table
    SumStat{i} = tmp_tbl;
end
